.scope screen {
	IRQ1_LINE = 242
	IRQ2_LINE = 45
	
	.export init: {
		; Set up raster IRQ
		php
		sei
		lda #<isr1
		sta irq
		lda #>isr1
		sta irq + 1
		lda vic.cr1
		and #$7f
		sta vic.cr1
		lda #IRQ1_LINE
		sta vic.raster
		inc vic.irqmask
		plp
		
		rts
	}
	
	; Raster ISR, fires on line 242
	isr1: {
		; Save accumulator
		pha
		
		; Disable screen
		lda #$7b
		sta vic.cr1
		
		; Set up next raster IRQ in chain
		lda #<isr2
		sta irq
		lda #>isr2
		sta irq + 1
		lda #IRQ2_LINE
		sta vic.raster
		
		; Ack IRQ and re-enable interrupts
		lda #1
		sta vic.irqstatus
		cli
		
		; Restore accumulator and return
		pla
		rti
	}
	
	.scope isr2 {
		; Save registers
		pha
		txa
		pha
		tya
		pha
		
		; Set a flag
		inc fired
		
		; Set up another raster IRQ for the next line
		lda #<isr3
		sta irq
		lda #>isr3
		sta irq+1
		inc vic.raster
		
		; Acknowledge the IRQ
		lda #1
		sta vic.irqstatus
		
		; Save the stack pointer
		tsx
		
		; Enable IRQs
		cli
		
		; nop until the next IRQ
		{
			nop
			nop
			nop
			nop
			nop
			nop
			nop
			nop
			nop
			nop
			nop
			nop
			nop
			nop
			jmp _cont
		}
		
		; Flag indicating that the IRQ has fired
		.global fired: .byte $00
	}

	.align $100 $??
	isr3: {
		; Restore the stack pointer saved by isr2
		txs
		
		; Delay a few cycles until we're on the very end of the
		; raster line
		ldx #8
		{
			dex
			bne _cont
		}
		bit $ff
		
		; Correct for 1-cycle wobble
		lda vic.raster
		cmp vic.raster
		{ beq _break }
		
		lda #$11
		sta vic.cr1
		
		nop
		nop
		nop
		nop
		nop
		nop
		nop
		nop
		nop
		nop
		nop
		bit $ff
		
		; Calculate a variable delay by branching over nops.
		; The delay is accurate to 2 cycles.
		lda #39
		sec
		sbc x
		lsr
		sta x_branch_offset
		
		; Force branch always
		clv
		
		; Introduce an additional 1-cycle delay if the LSB of the x
		; offset is set.
		{ bcc _break }
		
		; Branch somewhere into the nops depending on the x offset.
		x_branch_offset = * + 1
		bvc *
		nop
		nop
		nop
		nop
		nop
		nop
		nop
		nop
		nop
		nop
		nop
		nop
		nop
		nop
		nop
		nop
		nop
		nop
		nop
		nop
		nop
		nop
		nop
		nop
		nop
		nop
		
		; Do the DMA Delay by tweaking vic.cr1 at the correct time
		lda #%01111011
		dec vic.cr1
		inc vic.cr1
		sta vic.cr1
		
		; Acknowledge the IRQ
		lda #1
		sta vic.irqstatus
		
		lda #$1b
		sta vic.cr1
		
		inc x
		lda x
		sec
		sbc #40
		{
			bne _break
			sta x
		}
		
		; Set up next raster IRQ in chain
		lda #<isr1
		sta irq
		lda #>isr1
		sta irq + 1
		lda #IRQ1_LINE
		sta vic.raster
		
		; Restore registers
		pla
		tay
		pla
		tax
		pla
		
		rti
	}
	
	x: .byte $00
	y: .byte $00
}
